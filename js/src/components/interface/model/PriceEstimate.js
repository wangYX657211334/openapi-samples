/**
 * Uber API
 * Move your app forward with the Uber API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PriceEstimate model module.
 * @module interface/model/PriceEstimate
 * @version 1.0.0
 */
class PriceEstimate {
    /**
     * Constructs a new <code>PriceEstimate</code>.
     * @alias module:interface/model/PriceEstimate
     */
    constructor() { 
        
        PriceEstimate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PriceEstimate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:interface/model/PriceEstimate} obj Optional instance to populate.
     * @return {module:interface/model/PriceEstimate} The populated <code>PriceEstimate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PriceEstimate();

            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('estimate')) {
                obj['estimate'] = ApiClient.convertToType(data['estimate'], 'String');
            }
            if (data.hasOwnProperty('low_estimate')) {
                obj['low_estimate'] = ApiClient.convertToType(data['low_estimate'], 'Number');
            }
            if (data.hasOwnProperty('high_estimate')) {
                obj['high_estimate'] = ApiClient.convertToType(data['high_estimate'], 'Number');
            }
            if (data.hasOwnProperty('surge_multiplier')) {
                obj['surge_multiplier'] = ApiClient.convertToType(data['surge_multiplier'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
 * @member {String} product_id
 */
PriceEstimate.prototype['product_id'] = undefined;

/**
 * [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
 * @member {String} currency_code
 */
PriceEstimate.prototype['currency_code'] = undefined;

/**
 * Display name of product.
 * @member {String} display_name
 */
PriceEstimate.prototype['display_name'] = undefined;

/**
 * Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI.
 * @member {String} estimate
 */
PriceEstimate.prototype['estimate'] = undefined;

/**
 * Lower bound of the estimated price.
 * @member {Number} low_estimate
 */
PriceEstimate.prototype['low_estimate'] = undefined;

/**
 * Upper bound of the estimated price.
 * @member {Number} high_estimate
 */
PriceEstimate.prototype['high_estimate'] = undefined;

/**
 * Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
 * @member {Number} surge_multiplier
 */
PriceEstimate.prototype['surge_multiplier'] = undefined;






export default PriceEstimate;

