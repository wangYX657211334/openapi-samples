/**
 * Uber API
 * Move your app forward with the Uber API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


// custom
import ApiClient from "../ApiClient";
import Error from '../model/Error';
import ProductList from '../model/ProductList';

/**
* Products service.
* @module interface/api/ProductsApi
* @version 1.0.0
*/
export default class ProductsApi {

    /**
    * Constructs a new ProductsApi. 
    * @alias module:interface/api/ProductsApi
    * @class
    * @param {module:interface/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:interface/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the productsGet operation.
     * @callback module:interface/api/ProductsApi~productsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:interface/model/ProductList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Product Types
     * The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.
     * @param {Number} latitude Latitude component of location.
     * @param {Number} longitude Longitude component of location.
     * @param {module:interface/api/ProductsApi~productsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:interface/model/ProductList}
     */
    productsGet(latitude, longitude, callback) {
      let postBody = null;
      // verify the required parameter 'latitude' is set
      if (latitude === undefined || latitude === null) {
        throw new Error("Missing the required parameter 'latitude' when calling productsGet");
      }
      // verify the required parameter 'longitude' is set
      if (longitude === undefined || longitude === null) {
        throw new Error("Missing the required parameter 'longitude' when calling productsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'latitude': latitude,
        'longitude': longitude
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductList;
      return this.apiClient.callApi(
        '/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
